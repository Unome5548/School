import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.Scanner;


public class ImageEditor {
	
	public static Pixel[][] image = new Pixel[1][1];
	
	public static void main(String args[]){
		
		Scanner inputFile = null;
		int counter = 0;
		int width = 0;
		int height = 0;
		int row = 0;
		int col = 0;
		int pixelCounter = 0;
		int r = 0;
		int g = 0;
		int b = 0;

		
		try {
			System.out.println(args[0]);
		    inputFile = new Scanner(new BufferedReader(new FileReader(args[0])));
		    int state = 0;
		    
		    while(inputFile.hasNext()){
				String in = inputFile.next();
				if(in.equals("#")){
					System.out.println("COMMENT:" + inputFile.nextLine());
				}else {
					if(state == 1){
						width = Integer.parseInt(in);
					}else if(state == 2) {
						height = Integer.parseInt(in);
						image = new Pixel[width][height];
					}else if(state >= 4){
						if(pixelCounter == 0){
							r = Integer.parseInt(in);
							pixelCounter++;
						}
						else if(pixelCounter == 1){
							g = Integer.parseInt(in);
							pixelCounter++;
						}
						else if(pixelCounter == 2){
							b = Integer.parseInt(in);
							Pixel pixel = new Pixel(r,g,b);
							image[row][col] = pixel;
							col++;
							if(col >= width){
								col = 0;
								row++;
							}
							pixelCounter = 0;
						}
					}
					state++;
				}
			}
		    
		} catch (FileNotFoundException fe) {
		    System.out.println("File not found!");
		}
		printPixels();
		runEffect(args[2]);	
		
	}
	
	public static void runEffect(String arg){
		String effect = arg;
		if(effect.equals("grayscale")){
			System.out.println("Run Grayscale");
		}
		else if(effect.equals("invert")){
			System.out.println("Run Invert");
			invertPixels();
		}
		else if(effect.equals("emboss")){
			System.out.println("Run Emboss");
		}
		else if(effect.equals("motionblur")){
			System.out.println("Run Motion");
		}
		printPixels();
	}
	
	public static void invertPixels(){
		for(int i = 0; i < image.length; i++){
			for(int i2= 0; i2 < image[i].length; i2++){
				image[i][i2].invert();
			}
		}
	}
	
	public static void printPixels(){
		for(int i = 0; i < image.length; i++){
			for(int i2= 0; i2 < image[i].length; i2++){
				image[i][i2].printPixel();
			}
		}
//		System.out.println("Pixel added " + r + " " + g + " " + b + "row: " + row + "col: " + col);

	}

}
